<div
  class="grid w-full place-content-around place-items-baseline gap-1 gap-y-8 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5"
>
  <% if (products) { products.forEach(product => { %>
  <div class="flex w-60 flex-col gap-1">
    <header class="relative">
      <div
        class="absolute right-0 z-10 flex cursor-pointer flex-col p-2 text-black"
      >
        <div
          class="favourite grid place-content-center rounded-md p-1 transition-all hover:bg-slate-300"
          onclick="addFavourite(this)"
          data-id="<%- product.id %>"
        >
          <%- include('../icons/heart.ejs') %>
        </div>
        <% if (product.stock > 0) { %>
        <div
          class="add-product-button grid place-content-center rounded-md p-1 transition-all hover:bg-slate-300"
          onclick="addProduct(this)"
          data-id="<%- product.id %>"
          data-state="0"
        >
          <%- include('../icons/add.ejs') %>
        </div>
        <div
          class="add-product-controls hidden flex-col justify-center opacity-0 transition-all"
        >
          <div
            class="grid place-content-center rounded-md p-1 transition-all hover:bg-slate-300"
            onclick="addCount(this)"
          >
            <%- include('../icons/arrow-up.ejs') %>
          </div>
          <div
            class="counter grid place-content-center rounded-md bg-white p-1 transition-all"
            data-value="0"
            data-limit="<%- product.stock %>"
          >
            0
          </div>
          <div
            class="grid place-content-center rounded-md p-1 transition-all hover:bg-slate-300"
            onclick="restCount(this)"
          >
            <%- include('../icons/arrow-down.ejs') %>
          </div>
        </div>
        <% } %>
      </div>
      <a href="#" class="product-image relative">
        <img src="<%- product.imgUrl %>" alt="<%- product.title %>" />
        <div
          class="photo-backdrop absolute inset-0 bg-green-600 opacity-0 transition-all"
        ></div>
      </a>
      <% if (product.stock === 0) { %>
      <div
        class="absolute top-3/4 grid h-8 w-full place-items-center bg-red-600 text-sm text-white opacity-90"
      >
        <p>Agotado</p>
      </div>
      <% } %> <% if (product.stock === 1) { %>
      <div
        class="absolute top-3/4 grid h-8 w-full place-items-center bg-yellow-600 text-sm text-white opacity-90"
      >
        <p>Ultima unidad!</p>
      </div>
      <% } %>
    </header>
    <footer>
      <div class="flex flex-col gap-2">
        <a href="#">
          <p class="text-sm text-yellow-800"><%- product.title %></p>
        </a>
        <p class="text-xs font-bold text-red-900">$<%- product.price %></p>
      </div>
    </footer>
  </div>

  <% })} %>
</div>

<script>
  function addProduct(element) {
    const addButton = element;
    const productId = element.dataset.id;
    const control = element.nextElementSibling;
    const counter = control.querySelector(".counter");
    const quantity = counter.dataset.value;
    const photoBackdropElement =
      element.parentElement.parentElement.querySelector(".photo-backdrop");

    if (parseInt(element.dataset.state) === 0) {
      element.dataset.state = 1;
    }

    if (parseInt(element.dataset.state) === 1) {
      if (parseInt(counter.dataset.value) !== 0) {
        counter.dataset.value = 0;
        counter.innerHTML = 0;
        // TODO: LÃ³gica para cargar al carrito
        console.log(`Se han agregado ${quantity} productos`);
        // addButton.classList.add('text-green-600');
        photoBackdropElement.classList.toggle("opacity-0");
        photoBackdropElement.classList.toggle("opacity-30");
        photoBackdropElement.classList.toggle("z-10");
        setTimeout(() => {
          // addButton.classList.remove('text-green-600');
          photoBackdropElement.classList.toggle("opacity-0");
          photoBackdropElement.classList.toggle("opacity-30");
          photoBackdropElement.classList.toggle("z-10");
        }, 1500);
        element.dataset.state = 0;
      }
    }

    addButton.classList.toggle("-translate-x-full");
    control.classList.toggle("-translate-y-1/3");
    control.classList.toggle("opacity-100");
    control.classList.toggle("hidden");
    control.classList.toggle("flex");
  }

  function addCount(element) {
    const counter = element.nextElementSibling;
    const limit = counter.dataset.limit;
    const newValue = parseInt(counter.dataset.value) + 1;
    if (newValue <= limit) {
      counter.innerHTML = newValue;
      counter.dataset.value = newValue;
    }
  }

  function restCount(element) {
    const counter = element.previousElementSibling;
    const limit = counter.dataset.limit;
    const newValue = parseInt(counter.dataset.value) - 1;
    if (newValue >= 0) {
      counter.innerHTML = newValue;
      counter.dataset.value = newValue;
    }
  }

  function colorizeFavs() {
    const favElements = document.querySelectorAll(".favourite");
    let favourites = JSON.parse(localStorage.getItem("favourites"));
    favElements.forEach((e) => {
      let id = e.dataset.id;
      if (favourites.find((n) => n === id)) {
        e.classList.add("text-red-500");
      }
    });
  }

  function addFavourite(element) {
    let favourites = JSON.parse(localStorage.getItem("favourites"));
    if (!favourites) localStorage.setItem("favourites", "[]");
    if (!favourites.find((favId) => favId === element.dataset.id)) {
      favourites.push(element.dataset.id);
      element.classList.add("text-red-500");
    } else {
      favourites = favourites.filter((favId) => favId !== element.dataset.id);
      element.classList.remove("text-red-500");
    }
    localStorage.setItem("favourites", JSON.stringify(favourites));
  }

  colorizeFavs();
</script>
